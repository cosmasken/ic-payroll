{
  "name": "ic-payroll",
  "version": "0.0.0",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/cosmasken/ic-payroll"
  },
  "bugs": "https://github.com/cosmasken/ic-payroll/issues",
  "homepage": "https://github.com/cosmasken/ic-payroll",
  "author": "Cosmas Ken <arubacosmas@gmail.com>",
  "keywords": [
    "bitcoin",
    "ckbtc",
    "dfinity",
    "ic",
    "vite",
    "vue",
    "tailwindcss",
    "javascript",
    "ethereum"
  ],
  "scripts": {
    "dev": "vite",
    "deploy:identity": "dfx deploy --network local internet_identity",
    "deploy:image_tank": "dfx canister create image_tank && dfx deploy image_tank && dfx generate image_tank",
    "deploy:siwe_provider": "dfx deploy ic_siwe_provider --argument '(record { domain = \"127.0.0.1\"; uri = \"http://127.0.0.1:5173\"; salt = \"vsnsvnu4n398tu4u9jffjlwek\"; chain_id = opt 1; scheme = opt \"http\"; statement = opt \"Login to the IC-Payroll\"; sign_in_expires_in = opt 300000000000; session_expires_in = opt 604800000000000; targets = opt vec { \"'$(dfx canister id ic_siwe_provider)'\"; \"'$(dfx canister id assets)'\"; }; })'",
    "start": "npm install --force && npm run replica && npm run private-dids && npm run deploy && npm run deploy:identity",
<<<<<<< HEAD
    "replica": "dfx stop && rm -rf .dfx && dfx start --clean --background && dfx canister create ckbtc_ledger && dfx canister create backend && dfx canister create siwe_ic ",
    "deploy": "npm run deploy:ledger && npm run deploy:index &&  npm run deploy:backend && dfx generate backend &&  npm run deploy:siwe_ic && dfx generate siwe_ic && npm run deploy:assets ",
=======
    "replica": "dfx stop && rm -rf .dfx && dfx start --clean --background  && dfx canister create ckbtc_ledger && dfx canister create backend",
    "deploy": "npm run deploy:ledger && npm run deploy:index  &&   npm run deploy:backend  && dfx generate backend  && npm run deploy:assets",
>>>>>>> workingpoint
    "public-dids": "perl -i -pe 's|icrc1\\.did|icrc1\\.public\\.did|g' dfx.json",
    "private-dids": "perl -i -pe 's|icrc1\\.public\\.did|icrc1\\.did|g' dfx.json",
    "deploy:siwe_ic": "dfx deploy siwe_ic",
    "deploy:ic_siwe_provider": "dfx deploy ic_siwe_provider",
    "deploy:ledger": "PRINCIPAL=$(dfx identity get-principal) && dfx deploy ckbtc_ledger --argument \"(variant {Init = record {minting_account = record { owner = principal \\\"$PRINCIPAL\\\" };transfer_fee = 10;token_symbol = \\\"ckBTC\\\";token_name = \\\"Test ckBTC\\\";metadata = vec {};feature_flags = opt record{icrc2 = true };initial_balances = vec {record { record {owner = principal \\\"$PRINCIPAL\\\"}; 100_000_000_000 } };archive_options = record {num_blocks_to_archive = 10_000;trigger_threshold = 20_000;cycles_for_archive_creation = opt 4_000_000_000_000;controller_id = principal \\\"$PRINCIPAL\\\";};}})\"  --mode=reinstall -y",
    "deploy:backend": "npm run public-dids && dfx deploy backend --argument '(0)' ",
    "deploy:assets": "dfx deploy assets",
    "deploy:index": "dfx deploy --network local icrc1_index --argument 'record {ledger_id = (principal \"mxzaz-hqaaa-aaaar-qaada-cai\"); }'",
    "mint": "read -p \"Enter a principal you want to mint tokens to. By default 1000 ckBTC will be minted to your current dfx identity.\n\" recipient && if [ -z \"$recipient\" ]; then echo \"No recipient specified, skipping minting.\"; else dfx canister call ckbtc_ledger icrc1_transfer \"(record {to = record {owner = principal \\\"$recipient\\\"};amount=100_000_000_000},)\"; fi",
    "mint:subaccount": "read -p \"Enter a principal you want to mint tokens to. By default 1000 ckBTC will be minted to your current dfx identity.\n\" recipient && read -p \"Enter a subaccount (optional). If not provided, default subaccount will be used.\n\" subaccount && if [ -z \"$recipient\" ]; then echo \"No recipient specified, skipping minting.\"; else dfx canister call ckbtc_ledger icrc1_transfer \"(record {to = record {owner = principal \\\"$recipient\\\"; subaccount = opt \\\"$subaccount\\\";};amount=100_000_000_000},)\"; fi",
    "build": "vite build",
    "serve": "vite preview",
    "lint": "eslint . --ext .vue,.js,.jsx,.cjs,.mjs --fix --ignore-path .gitignore",
    "format": "prettier --write canisters/",
    "format:vue": "prettier --write frontend/"
  },
  "dependencies": {
    "@connect2ic/core": "^0.2.0-beta.24",
    "@connect2ic/vue": "^0.2.0-beta.24",
    "@dfinity/agent": "^1.2.0",
    "@dfinity/assets": "^1.3.0",
    "@dfinity/auth-client": "^1.2.0",
    "@dfinity/candid": "^1.2.0",
    "@dfinity/identity": "^1.2.0",
    "@dfinity/principal": "^1.2.0",
    "@headlessui/vue": "^1.7.17",
    "@heroicons/vue": "^2.1.1",
    "@iconify/vue": "^4.1.1",
    "@internationalized/date": "^3.5.2",
<<<<<<< HEAD
    "@metamask/sdk": "^0.18.4",
    "@radix-ui/colors": "^3.0.0",
    "@rainbow-me/rainbowkit": "^1.3.0",
=======
    "@popperjs/core": "^2.11.8",
>>>>>>> workingpoint
    "@tailwindcss/forms": "^0.5.7",
    "@vueuse/components": "^10.9.0",
    "@vueuse/core": "^10.9.0",
    "@vueuse/motion": "^2.1.0",
    "alpinejs": "^3.14.0",
    "babel-loader": "^9.1.3",
    "bootstrap": "^5.3.3",
    "chart.js": "^4.4.3",
    "common-tags": "^1.8.2",
    "css-loader": "^6.9.0",
<<<<<<< HEAD
    "dotenv": "^16.3.2",
    "ethers": "^6.11.1",
    "ic-mops": "^0.38.1",
    "ic-use-siwe-identity": "^0.0.11",
=======
    "ethers": "^5.6.8",
    "metismenu": "^3.0.7",
>>>>>>> workingpoint
    "mo-dev": "^0.12.0",
    "moment": "^2.30.1",
    "pinia": "^2.1.7",
    "radix-vue": "^1.6.1",
<<<<<<< HEAD
    "siwe": "^2.2.0",
    "theme-change": "^2.5.0",
    "typescript": "^5.4.3",
    "unique-username-generator": "^1.3.0",
    "vee-validate": "^4.12.5",
    "viem": "^1.21.4",
    "vue": "^3.2.37",
    "vue-connect-wallet": "^0.1.7",
    "vue-router": "^4.2.5",
=======
    "sweetalert2": "^11.11.0",
    "typescript": "^5.4.3",
    "unique-username-generator": "^1.3.0",
    "vee-validate": "^4.12.5",
    "vue": "^3.4.24",
    "vue-chartjs": "^5.3.1",
    "vue-router": "^4.3.2",
>>>>>>> workingpoint
    "vue-shimmer": "^1.0.0",
    "vue-style-loader": "^4.1.3",
    "yup": "^1.3.3"
  },
  "devDependencies": {
    "@vitejs/plugin-vue": "^2.3.3",
    "autoprefixer": "^10.4.16",
    "buffer": "^6.0.3",
    "daisyui": "^4.6.0",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.4.33",
    "prettier": "^3.2.4",
    "prettier-plugin-motoko": "^0.8.2",
    "sass": "^1.75.0",
    "tailwindcss": "^3.4.1",
    "vite": "^2.9.13"
  }
}
